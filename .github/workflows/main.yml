name: Deploy Heardle

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1 ▸ Check out the repo
      - uses: actions/checkout@v4

      # 2 ▸ Install Node.js & Yarn (with cache)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: yarn

      - name: Enable Corepack (Yarn)
        run: corepack enable

      # 3 ▸ Install dependencies & build
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build the app
        run: yarn build

      # 4 ▸ Clean export directory on the server
      - name: Clean export directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -euo pipefail
            mkdir -p "${{ secrets.EXPORT_DIR }}"
            rm -rf "${{ secrets.EXPORT_DIR }}"/*

      # 5 ▸ Upload build to server
      - name: Upload build to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "build/*"
          target: "${{ secrets.EXPORT_DIR }}"

    # 6 ▸ Flatten build folder on the server
      - name: Flatten build directory
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -euo pipefail
            mv "${{ secrets.EXPORT_DIR }}/build/"* "${{ secrets.EXPORT_DIR }}/"
            rm -rf "${{ secrets.EXPORT_DIR }}/build"